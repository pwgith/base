name: 'Deploy Infra'
on:
  workflow_dispatch:

env:
  tf_version: '1.5.7'
  tg_version: '0.53.2'
  working_dir: 'infra/live/infra'

jobs:
  checks:
    runs-on: ubuntu-latest
    environment: 'infra'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

  plan:
    runs-on: ubuntu-latest
    environment: 'infra'
    needs: [ checks ]
    steps:
      - name: 'Checkout Helpers'
        uses: actions/checkout@main
        with:
          path: 'api/helpers'
          ref: ${{ github.sha }}
      - name: 'Checkout API'
        uses: actions/checkout@main
        with:
          path: 'api/api_name_example'
          ref: ${{ github.sha }}

      - name: 'Install Helper Packages'
        run: |
          pip install -r api/helpers/requirements.txt -t . 
      - name: 'Install API Packages'
        run: |
          pip install -r api/api_name_example/requirements.txt -t .
      - name: 'Zip'
        run: zip -r infra/live/infra/lambda-api_name_example-instance/lambda-api_name_example-instance.zip . -x "*test/*" "/aws/*" ".git/*" ".dev_container/*" ".github/*"

      - name: Plan
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all plan'

  deploy:
    runs-on: ubuntu-latest
    environment: 'infra'
    needs: [ plan ]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 'Checkout Helpers'
        uses: actions/checkout@main
        with:
          path: 'api/helpers'
          ref: ${{ github.sha }}
      - name: 'Checkout API'
        uses: actions/checkout@main
        with:
          path: 'api/api_name_example'
          ref: ${{ github.sha }}

      - name: 'Install Helper Packages'
        run: |
          pip install -r api/helpers/requirements.txt -t . 
      - name: 'Install API Packages'
        run: |
          pip install -r api/api_name_example/requirements.txt -t .
      - name: 'Zip'
        run: zip -r infra/live/infra/lambda-api_name_example-instance/lambda-api_name_example-instance.zip . -x "*test/*" "/aws/*" ".git/*" ".dev_container/*" ".github/*"

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@v2
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all apply'
